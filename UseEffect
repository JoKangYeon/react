--기초--
import "./App.css";
import Body from "./component/Body";
import Footer from "./component/Footer";
import Header from "./component/Header";
import { useState } from "react";
import { useEffect } from "react";

const App = () => {
  /* useEffect */

  const [count, setCount] = useState(0);
  const [name, setName] = useState("");
  const [list, setList] = useState([]);

  const addCount = (e) => {
    e.preventDefault();
    setCount(count + 1);
  };

  const nameOnChangeHandler = (e) => {
    e.preventDefault();
    setName(e.target.value);
  };

  const addList = (e) => {
    e.preventDefault();
    setList([...list, name]);
  };

  useEffect(() => {
    console.log("매번 렌더링");
  });

  useEffect(() => {
    console.log("최초렌더링");
  }, []);

  useEffect(() => {
    console.log("카운팅 렌더링");
  }, [count]);

  useEffect(() => {
    console.log("네임 렌더링");
  }, [name]);

  useEffect(() => {
    console.log("리스트 렌더링");
  }, [list]);

  return (
    <div className="App">
      {count}
      <button onClick={addCount}>카운트업</button>
      <input type="" onChange={nameOnChangeHandler}></input>
      <div>
        <button onClick={addList}>추가</button>
        {/* <button onClick={(e) => setList([...list, name])}>추가</button> */}
      </div>

      {/* <Header />
      <Body />
      <Footer /> */}
    </div>
  );
};

export default App;


------------------------------------------------------------------------------------
타이머 

import "../common.css";
import { useEffect, useState } from "react";
const Timer = ({ initTime, childFunction }) => {
  const [time, setTime] = useState(initTime);
  const [state, setState] = useState(false);

  useEffect(() => {
    //타이머
    let timer = null;
    // if (state) {
    timer = setInterval(() => {
      // setTime(time + 1);   비동기라서
      const timeOut = false;
      setTime((pre) => {
        if (pre == 0) {
          console.log("종료");
          clearInterval(timer);
          childFunction({ isSuccess: false, msg: "시간초과" });
          return 0;
        }
        return pre - 1;
      }); // update
    }, 1000);
    // }

    return () => {
      clearInterval(timer);
      console.log("종료");
    };

    // //clearup
    // return () => {
    //   console.log("종료");
    //   clearInterval(timer);
    // };
  }, []);

  const timeFormatter = (time) => {
    const min = Math.floor(time / 60);
    const sec = time % 60;

    const formatMin = String(min).padStart(2, "0");
    const formatSec = String(sec).padStart(2, "0");

    return `${formatMin} : ${formatSec}`;
  };

  return (
    <div className="Timer">
      <div>인증 시간</div>
      <div>남은시간 : {timeFormatter(time)}</div>
      <div>
        <button
          onClick={(e) => {
            e.preventDefault();
            childFunction({ isSuccess: true, msg: "인증성공" });
          }}
        >
          인증완료
        </button>
      </div>

      {/* <div>
        <button
          onClick={(e) => {
            e.preventDefault();
            setState(true);
          }}
        >
          Start
        </button>
        <button
          onClick={(e) => {
            e.preventDefault();
            setState(false);
          }}
        >
          Pause
        </button>
        <button
          onClick={(e) => {
            e.preventDefault();
            setState(false);
            setTime(initTime);
          }}
        >
          Reset
        </button>
      </div> */}
    </div>
  );
};

export default Timer;






